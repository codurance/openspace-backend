service:
  name: openspace-backend
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  serverless-offline:
    httpPort: 4000

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    PROD_DB_URI: ${env:PROD_DB_URI}
    PROD_DB_USER: ${env:PROD_DB_USER}
    PROD_DB_PASSWD: ${env:PROD_DB_PASSWD}
    PROD_DB_NAME: ${env:PROD_DB_NAME}
    DB_PORT: ${env:DB_PORT}
  profile: open-space-serverless-admin

functions:
  getSessions:
    handler: SessionsHandler.getSessions
    events:
      - http:
          method: get
          path: /api/sessions

  addSession:
    handler: SessionsHandler.addASession
    events:
      - http:
          method: post
          path: /api/sessions

  editSession:
    handler: SessionsHandler.editASession
    events:
      - http:
          method: put
          path: /api/sessions/{id}

  deleteSession:
    handler: SessionsHandler.deleteASession
    events:
      - http:
          method: delete
          path: /api/sessions/{id}

  updateLike:
    handler: SessionsHandler.updateALike
    events:
      - http:
          method: post
          path: /api/sessions/{id}/likes/{email}

  getSpaces:
    handler: SpacesHandler.getSpaces
    events:
      - http:
          method: get
          path: /api/spaces

  addSpace:
    handler: SpacesHandler.addASpace
    events:
      - http:
          method: post
          path: /api/spaces

  editSpace:
    handler: SpacesHandler.editASpace
    events:
      - http:
          method: put
          path: /api/spaces/{id}

  deleteSpace:
    handler: SpacesHandler.deleteASpace
    events:
      - http:
          method: delete
          path: /api/spaces/{id}